{"ast":null,"code":"var _jsxFileName = \"/home/ahmat-fauzi/Documents/CODING/FrontendMentor Challenges/advance-multi-step-form/src/components/Steps/PersonalInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\n\n// Components\nimport FormBody from \"../FormBody/FormBody\";\nimport TextForm from \"../shared/TextForm\";\nimport { FormContext } from \"../../context/form-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet validityStore = null;\nconst validateName = name => name.trim().length >= 3;\nconst validateEmail = email => email.trim() !== \"\" && email.includes(\"@\");\nconst validatePhone = phone => phone.trim().replaceAll(\" \", \"\").length >= 8 && !isNaN(Number(phone.trim().replaceAll(\" \", \"\")));\nexport default function PersonalInfo({\n  setFlowValidity,\n  formFlow\n}) {\n  _s();\n  const {\n    FormState: formContext\n  } = useContext(FormContext);\n  const [personalInfoForm, setPersonalInfoForm] = useState(formContext.personalInfo);\n  const [formValid, setFormValid] = useState({\n    name: validateName(personalInfoForm.name),\n    email: validateEmail(personalInfoForm.email),\n    phone: validatePhone(personalInfoForm.phone)\n  });\n  const updateValidity = () => {\n    validityStore && clearTimeout(validityStore);\n    validityStore = setTimeout(() => {\n      setFlowValidity(formValid.name && formValid.email && formValid.phone, {\n        type: \"personalInfo\",\n        payload: personalInfoForm\n      });\n    }, 500);\n  };\n  const handleNameChange = event => {\n    setPersonalInfoForm({\n      ...personalInfoForm,\n      name: event.target.value\n    });\n    setFormValid({\n      ...formValid,\n      name: validateName(event.target.value)\n    });\n  };\n  const handleEmailChange = event => {\n    setPersonalInfoForm({\n      ...personalInfoForm,\n      email: event.target.value\n    });\n    setFormValid({\n      ...formValid,\n      email: validateEmail(event.target.value)\n    });\n  };\n  const handlePhoneChange = event => {\n    setPersonalInfoForm({\n      ...personalInfoForm,\n      phone: event.target.value\n    });\n    setFormValid({\n      ...formValid,\n      phone: validatePhone(event.target.value)\n    });\n  };\n  useEffect(() => {\n    updateValidity();\n  }, [formValid]);\n  return /*#__PURE__*/_jsxDEV(FormBody, {\n    headerText: \"Personal Info\",\n    bodyText: \"Please provide your name, email address, and phone number.\",\n    children: [/*#__PURE__*/_jsxDEV(TextForm, {\n      label: \"Name\",\n      placeholder: \"Ahmat Fauzi\",\n      value: personalInfoForm.name,\n      onChange: handleNameChange,\n      type: \"text\",\n      validationMessage: \"Enter your name\",\n      errorState: !formValid.name && formFlow.attemptedSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n      label: \"Email\",\n      placeholder: \"contoh@gmail.com\",\n      value: personalInfoForm.email,\n      onChange: handleEmailChange,\n      type: \"email\",\n      validationMessage: \"Enter your email\",\n      errorState: !formValid.email && formFlow.attemptedSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n      label: \"Phone Number\",\n      placeholder: \"+628389028652478\",\n      value: personalInfoForm.phone,\n      onChange: handlePhoneChange,\n      type: \"tel\",\n      validationMessage: \"Enter your phone number\",\n      errorState: !formValid.phone && formFlow.attemptedSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(PersonalInfo, \"ToUy0u9GGe9B/bDCJ3uOBaw9Hqc=\");\n_c = PersonalInfo;\nvar _c;\n$RefreshReg$(_c, \"PersonalInfo\");","map":{"version":3,"names":["React","useContext","useEffect","useState","FormBody","TextForm","FormContext","jsxDEV","_jsxDEV","validityStore","validateName","name","trim","length","validateEmail","email","includes","validatePhone","phone","replaceAll","isNaN","Number","PersonalInfo","setFlowValidity","formFlow","_s","FormState","formContext","personalInfoForm","setPersonalInfoForm","personalInfo","formValid","setFormValid","updateValidity","clearTimeout","setTimeout","type","payload","handleNameChange","event","target","value","handleEmailChange","handlePhoneChange","headerText","bodyText","children","label","placeholder","onChange","validationMessage","errorState","attemptedSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ahmat-fauzi/Documents/CODING/FrontendMentor Challenges/advance-multi-step-form/src/components/Steps/PersonalInfo.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\n\n// Components\nimport FormBody from \"../FormBody/FormBody\";\nimport TextForm from \"../shared/TextForm\";\nimport { FormContext } from \"../../context/form-context\";\n\nlet validityStore = null;\n\nconst validateName = (name) => name.trim().length >= 3;\nconst validateEmail = (email) => email.trim() !== \"\" && email.includes(\"@\");\nconst validatePhone = (phone) =>\n  phone.trim().replaceAll(\" \", \"\").length >= 8 &&\n  !isNaN(Number(phone.trim().replaceAll(\" \", \"\")));\n\nexport default function PersonalInfo({ setFlowValidity, formFlow }) {\n  const { FormState: formContext } = useContext(FormContext);\n  const [personalInfoForm, setPersonalInfoForm] = useState(\n    formContext.personalInfo\n  );\n\n  const [formValid, setFormValid] = useState({\n    name: validateName(personalInfoForm.name),\n    email: validateEmail(personalInfoForm.email),\n    phone: validatePhone(personalInfoForm.phone),\n  });\n\n  const updateValidity = () => {\n    validityStore && clearTimeout(validityStore);\n    validityStore = setTimeout(() => {\n      setFlowValidity(formValid.name && formValid.email && formValid.phone, {\n        type: \"personalInfo\",\n        payload: personalInfoForm,\n      });\n    }, 500);\n  };\n\n  const handleNameChange = (event) => {\n    setPersonalInfoForm({ ...personalInfoForm, name: event.target.value });\n    setFormValid({ ...formValid, name: validateName(event.target.value) });\n  };\n\n  const handleEmailChange = (event) => {\n    setPersonalInfoForm({ ...personalInfoForm, email: event.target.value });\n    setFormValid({ ...formValid, email: validateEmail(event.target.value) });\n  };\n\n  const handlePhoneChange = (event) => {\n    setPersonalInfoForm({ ...personalInfoForm, phone: event.target.value });\n    setFormValid({\n      ...formValid,\n      phone: validatePhone(event.target.value),\n    });\n  };\n\n  useEffect(() => {\n    updateValidity();\n  }, [formValid]);\n\n  return (\n    <FormBody\n      headerText=\"Personal Info\"\n      bodyText=\"Please provide your name, email address, and phone number.\"\n    >\n      <TextForm\n        label=\"Name\"\n        placeholder=\"Ahmat Fauzi\"\n        value={personalInfoForm.name}\n        onChange={handleNameChange}\n        type=\"text\"\n        validationMessage=\"Enter your name\"\n        errorState={!formValid.name && formFlow.attemptedSubmit}\n      />\n      <TextForm\n        label=\"Email\"\n        placeholder=\"contoh@gmail.com\"\n        value={personalInfoForm.email}\n        onChange={handleEmailChange}\n        type=\"email\"\n        validationMessage=\"Enter your email\"\n        errorState={!formValid.email && formFlow.attemptedSubmit}\n      />\n      <TextForm\n        label=\"Phone Number\"\n        placeholder=\"+628389028652478\"\n        value={personalInfoForm.phone}\n        onChange={handlePhoneChange}\n        type=\"tel\"\n        validationMessage=\"Enter your phone number\"\n        errorState={!formValid.phone && formFlow.attemptedSubmit}\n      />\n    </FormBody>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}