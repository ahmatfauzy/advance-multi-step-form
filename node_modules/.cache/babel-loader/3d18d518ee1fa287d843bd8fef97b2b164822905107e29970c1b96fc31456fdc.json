{"ast":null,"code":"var _jsxFileName = \"/home/ahmat-fauzi/Documents/CODING/FrontendMentor Challenges/advance-multi-step-form/src/components/Steps/Plan.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport FormBody from \"../FormBody/FormBody\";\nimport RadioSelect from \"../shared/RadioSelect\";\nimport Toggle from \"../shared/Toggle\";\nimport { FormContext } from \"../../context/form-context\";\nimport { convertSchemeToText } from \"../../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst planOptions = [{\n  name: \"Arcade\",\n  price: {\n    perYear: 90,\n    perMonth: 9\n  },\n  promo: \"2 months free\",\n  color: \"orange\"\n}, {\n  name: \"Advanced\",\n  price: {\n    perYear: 120,\n    perMonth: 12\n  },\n  promo: \"2 months free\",\n  color: \"pink\"\n}, {\n  name: \"Pro\",\n  price: {\n    perYear: 150,\n    perMonth: 15\n  },\n  promo: \"2 months free\",\n  color: \"purple\"\n}];\nlet validityStore = null;\nconst validatePlan = planIndex => typeof Number(planIndex) === \"number\";\nexport default function Plan({\n  setFlowValidity\n}) {\n  _s();\n  const {\n    FormState: formContext\n  } = useContext(FormContext);\n  const [selectedPlan, setSelectedPlan] = useState({\n    planIndex: formContext.plan.index,\n    scheme: formContext.scheme\n  });\n  const [schemeData, setSchemeData] = useState(convertSchemeToText(selectedPlan.scheme));\n  useEffect(() => {\n    setSchemeData(convertSchemeToText(selectedPlan.scheme));\n  }, [selectedPlan]);\n  const [formValid, setFormValid] = useState({\n    planIndex: true,\n    scheme: true\n  });\n  const updateValidity = () => {\n    validityStore && clearTimeout(validityStore);\n    setTimeout(() => {\n      setFlowValidity(formValid.planIndex && formValid.scheme, [{\n        type: \"plan\",\n        payload: {\n          ...planOptions[selectedPlan.planIndex],\n          index: selectedPlan.planIndex\n        }\n      }, {\n        type: \"scheme\",\n        payload: selectedPlan.scheme\n      }]);\n    }, 500);\n  };\n  const handlePlanChange = event => {\n    setSelectedPlan({\n      ...selectedPlan,\n      planIndex: Number(event.target.value)\n    });\n    setFormValid({\n      ...formValid,\n      planIndex: validatePlan(selectedPlan.planIndex)\n    });\n  };\n  const handleSchemeChange = event => {\n    setSelectedPlan({\n      ...selectedPlan,\n      scheme: Number(event.target.checked)\n    });\n    setFormValid({\n      ...formValid,\n      planIndex: validatePlan(selectedPlan.scheme)\n    });\n  };\n  useEffect(() => {\n    updateValidity();\n  }, [formValid]);\n  return /*#__PURE__*/_jsxDEV(FormBody, {\n    headerText: \"Select your plan\",\n    bodyText: \"You have the option of monthly or yearly billing.\",\n    children: [/*#__PURE__*/_jsxDEV(RadioSelect, {\n      options: planOptions,\n      name: \"plans\",\n      keyName: \"name\",\n      onChange: handlePlanChange,\n      selectedValue: selectedPlan.planIndex,\n      durationData: schemeData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n      offValue: \"Monthly\",\n      onValue: \"Yearly\",\n      onChange: handleSchemeChange,\n      value: selectedPlan.scheme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(Plan, \"msaXcaP/I2Ul0WAhse43sFwqapI=\");\n_c = Plan;\nvar _c;\n$RefreshReg$(_c, \"Plan\");","map":{"version":3,"names":["React","useContext","useEffect","useState","FormBody","RadioSelect","Toggle","FormContext","convertSchemeToText","jsxDEV","_jsxDEV","planOptions","name","price","perYear","perMonth","promo","color","validityStore","validatePlan","planIndex","Number","Plan","setFlowValidity","_s","FormState","formContext","selectedPlan","setSelectedPlan","plan","index","scheme","schemeData","setSchemeData","formValid","setFormValid","updateValidity","clearTimeout","setTimeout","type","payload","handlePlanChange","event","target","value","handleSchemeChange","checked","headerText","bodyText","children","options","keyName","onChange","selectedValue","durationData","fileName","_jsxFileName","lineNumber","columnNumber","offValue","onValue","_c","$RefreshReg$"],"sources":["/home/ahmat-fauzi/Documents/CODING/FrontendMentor Challenges/advance-multi-step-form/src/components/Steps/Plan.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\n\nimport FormBody from \"../FormBody/FormBody\";\nimport RadioSelect from \"../shared/RadioSelect\";\nimport Toggle from \"../shared/Toggle\";\n\nimport { FormContext } from \"../../context/form-context\";\nimport { convertSchemeToText } from \"../../utils\";\n\nconst planOptions = [\n  {\n    name: \"Arcade\",\n    price: {\n      perYear: 90,\n      perMonth: 9,\n    },\n    promo: \"2 months free\",\n    color: \"orange\",\n  },\n  {\n    name: \"Advanced\",\n    price: {\n      perYear: 120,\n      perMonth: 12,\n    },\n    promo: \"2 months free\",\n    color: \"pink\",\n  },\n  {\n    name: \"Pro\",\n    price: {\n      perYear: 150,\n      perMonth: 15,\n    },\n    promo: \"2 months free\",\n    color: \"purple\",\n  },\n];\n\nlet validityStore = null;\n\nconst validatePlan = (planIndex) => typeof Number(planIndex) === \"number\";\n\nexport default function Plan({ setFlowValidity }) {\n  const { FormState: formContext } = useContext(FormContext);\n  const [selectedPlan, setSelectedPlan] = useState({\n    planIndex: formContext.plan.index,\n    scheme: formContext.scheme,\n  });\n\n  const [schemeData, setSchemeData] = useState(\n    convertSchemeToText(selectedPlan.scheme)\n  );\n\n  useEffect(() => {\n    setSchemeData(convertSchemeToText(selectedPlan.scheme));\n  }, [selectedPlan]);\n\n  const [formValid, setFormValid] = useState({\n    planIndex: true,\n    scheme: true,\n  });\n\n  const updateValidity = () => {\n    validityStore && clearTimeout(validityStore);\n    setTimeout(() => {\n      setFlowValidity(formValid.planIndex && formValid.scheme, [\n        {\n          type: \"plan\",\n          payload: {\n            ...planOptions[selectedPlan.planIndex],\n            index: selectedPlan.planIndex,\n          },\n        },\n        {\n          type: \"scheme\",\n          payload: selectedPlan.scheme,\n        },\n      ]);\n    }, 500);\n  };\n\n  const handlePlanChange = (event) => {\n    setSelectedPlan({ ...selectedPlan, planIndex: Number(event.target.value) });\n    setFormValid({\n      ...formValid,\n      planIndex: validatePlan(selectedPlan.planIndex),\n    });\n  };\n\n  const handleSchemeChange = (event) => {\n    setSelectedPlan({ ...selectedPlan, scheme: Number(event.target.checked) });\n    setFormValid({\n      ...formValid,\n      planIndex: validatePlan(selectedPlan.scheme),\n    });\n  };\n\n  useEffect(() => {\n    updateValidity();\n  }, [formValid]);\n\n  return (\n    <FormBody\n      headerText=\"Select your plan\"\n      bodyText=\"You have the option of monthly or yearly billing.\"\n    >\n      <RadioSelect\n        options={planOptions}\n        name=\"plans\"\n        keyName=\"name\"\n        onChange={handlePlanChange}\n        selectedValue={selectedPlan.planIndex}\n        durationData={schemeData}\n      />\n      <Toggle\n        offValue=\"Monthly\"\n        onValue=\"Yearly\"\n        onChange={handleSchemeChange}\n        value={selectedPlan.scheme}\n      />\n    </FormBody>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}